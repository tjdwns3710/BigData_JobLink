54pp
1:n관계가 가장 이상적임
 - 1의 기본키가 n쪽의 외래키로 사용됨

55pp
1:1관계
관계를 확인 할때에는 각각 엔터티를 기준으로 생각해봄
교수 입장에서, 학과 입장에서
m:N관계는 여러개로 분리를 함

56pp
1:n관계가 제일 많은 관계임
학년 기분으로 몇개 맵핑되는지 확인 (반대 입장에서도 생각해봐라)

57pp
n:m 업무에 따라 다르게 설계할 수 있음
한 학생이 1개의 동아리에만 들어갈 수 있다면 1:n으로 바뀜
업무에 따라 합당하게 만들어야하기 때문에 정답이 없음

60pp
논리적 모델링까지 하고 er다이어그램을 만듬
er다이어그램을 만들어야 어떻게 된는지 눈으로 보임

61pp
식별관계는 부모테이블의 기본키가 자식테이블의 기본키가 되는 경우

62pp
학생이랑 교수랑은 직접적으로 조인을 못하지만 (교수-강좌-등록-학생) 이런식으로 조인가능

69pp
완전함수종속을 만족하지 않으면 분리 시켜야 함
부분함수종속을 제거 해야함

71pp
이행함수종속
A->B->C(이행함수종속) 이걸 없애야함 그래서 A->B랑 B->C로 분리를 해야함
B(종속자)는 A(결정자)에의해 결정(종속된다)되고 C는 B에의해 결정됨
3정규화는 이행함수종속을 없애야함

68pp
트랜잭션 - 인설트 업데이트 딜리트 할 때 씀
 - 논리적 작업 단위
 - 업데이트가 두번이 일어나야 업무가 진행 되는데 이런 단위
커밋 - 다 일어난 것처럼 되는것
롤백 - 아무일도 없던것처럼 만드는것
락이라는 개념도 있음
이너조인 - 양쪽이 다 있어야 나옴
아우터조인 - 한쪽은 다나오고 다나온쪽에 해당하는것만 다른쪽에 뽑아냄

69pp
기본키는 무조건 하나
기본키가 하나인데 두개의 컬럼이 묶어져서 하나역할을 하는 것임
결정자는 기본키로 결정됨
A,B가 묶여서 하나의 기본키로 C를 결정 지는게 완전함수종속
A,B가 묶여서 하나의 기본키인데 B만 D를 결정짓는게 부분함수종속
업무에 합당하게 만드는게 가장 좋은 방법

72pp
고객번호(결정자)에 의해 수출,사업자,우선순위(종속자)가 결정지어지니까 분리 시켜야함
주문번호(결정자)에의해 고객번호(종속자)가 결정지어짐
이렇게 두 단계관계를 가지는게 이행함수종속임 그래서 이것을 없에야함

개념모델링을 끝내버리면 ER다이어그램을 만들어줘야 함

char(10) - 길이 10칸을 다 차지(학번, 길이가 똑같은경우 효율
varchar(10) - 최대 10으로 들어오는 값의 길이만 차지(주소, 길이다 다를경우 효율

UTF-8 (한글3바이트, 영어1바이트)



부트스트랩 템플릿에서 쇼핑몰이랑 가장 가까운 디자인
git - github 주소

팀별로 트렐로(trello)