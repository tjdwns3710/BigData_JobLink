복습

gof의 디자인 패턴 종류
생성패턴, 구조패턴, 행위패턴
클래스 다이어그램은 안써도 상관없지만 만들면 편하게 코딩할 수 있음
그래서 만들어놓은게 디자인 패턴임

리팩토링은 외부의 변화는 없지만 내부의 변화를 생기게 해주는것

오픈소스의 기능을 가져다가 쓰는게 플러그인(마켓플레이스)
www.objectaid.com에서 다운로드에서 URL을 복사해서 이클립스에서 help에서 install new software에서 넣으면 됨

익셉션
예외(에러가 아님)는 실행하는 도중에 발생할 수 있기 때문에 미연에 방지시키는것
두 가지종류 
 -컴파일때 예외처리를 했는지 확인하는것
  - 이것은 무조건 해줘야 함
 -런타임일때
  -컴파일 타임에 안해줘도 상관없음
  -하지만 실행할때 문제가 생길 수 있기 때문에 해주는게 좋음
둘다 예외처리를 해주는게 안전한 방법
트라이캐치파이널리
스로우즈
 -내 메소드를 호출에서 처리할 때 그쪽에서 처리 시키는것 
 -하기 싫어서 미루고미루고하면 jvm이 해주는데 에러메세지를 볼수가 없음
 -그래서 내가 처리해주는게 좋음(안전)
트라이 스로우즈 파이널리로 쓸 수 있음(캐치문을 스로우즈로 대체)
 -스로우 받은애는 예외처리를 해줘야함

캐치가 여러번 나오면 순서는 가장 작은 범위가 맨 위로 올라와야 함
예외가 발생하면 트라이에서 멈추고 트라이 가니까 트라이 발생이 빨리되는 트라이부터 먼저 씀

*상속관계를 확인 해야함

예외(를 미루는)처리하는 것은 throws
사용자가 예외를 일부러 만드는 것은 throw 

오브젝트
equals하고 tostring이랑 헤시코드
바꾸고 싶으면 오버라이드를 하면 됨
자바의 모든 클래스는 오브젝트를 상속받기 떄문

스트링
두가지 종류가 있는데 메모리 종류가 다름
==와 .equals가 다름
주소와 내용

스트링버퍼와 스트링빌더
메모리가 따로 따로 잡히기 때문
메모리를 효율적으로 사용하기 위해

자바는 메인쓰면 쓰레드 하나 만들어짐 - 메인 쓰레드

html5에서 쓰레드 개념이 나옴 
ui와 백그라운드를 분리해둬서 따로 처리하는걸 스레드를 이용해서 사용
 - 두가지 동시에 일어나게 해주는것(총쏘면서 걸어가는것)
 - 서블릿할때 쓰레드를 사용하니 배움

wrapper클래스
기본형을 박스를 씌어서 참조형으로 바꿔주는것

제너릭
컴파일타임에 데이터 타입을 체크해주는 것

-----------------------

map컬렉션
클래스안에 클래스가 들어가거나 인터페이스가 들어갈 수 있음
인터페이스안에는 상수와 추상메소드밖에 못들어가지만 그안에도 인터페이스가 들어갈 수 있음(네스티드,인어 인터페이스)

스테틱 메소드는
클래스이름,메소드이름 으로 쓸 수 있음

SortTest/14
<Integer> List<Integer> java.util.Arrays.asList(Integer... a)
반환형도 알아서 바뀜(제너릭 메소드) - 인테져면 인테져, 스트링이면 스트링으로

문자열을 비교할때는 앞에서부터 하나씩 비교 - 53 521을 비교하면 53이 더 크게 인식


스트림
파일에서 파일로 데이터를 읽어오던지
네트웍에서 데이터를 읽어오던지
콘솔에서 데이터를 읽어오던지
한방향으로만 움직임 -  단방향
입력스트림(imput)
출력스트림(output)
최근에는 new io - 채널 개념
아직 스트림 많이 씀
문자단위로 읽거나 문자단위로 보내거나
바이트 단위로 읽거나 바이트 단위로 보내거나
1바이트씩 자르면 아스키코드
2바이트씩 자르면 유니코드
바이트단위 스트림은 input,output이 붙어있음 -그림파일같은 경우에는 바이트만씀
문자단위 스트립은 reader,writer
보조스트림