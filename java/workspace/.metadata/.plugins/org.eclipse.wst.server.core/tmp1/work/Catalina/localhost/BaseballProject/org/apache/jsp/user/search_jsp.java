/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.0.M22
 * Generated at: 2017-07-21 07:28:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import project.baseball.dto.PlayerBallDTO;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("project.baseball.dto.PlayerBallDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <meta name=\"description\" content=\"\">\r\n");
      out.write("    <meta name=\"author\" content=\"\">\r\n");
      out.write("\r\n");
      out.write("    <title> Bare - Start Bootstrap Template </title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap Core CSS -->\r\n");
      out.write("    <link href=\"./css/bootstrapSearch.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    \r\n");
      out.write("    <!-- Custom CSS -->\r\n");
      out.write("    <style>\r\n");
      out.write("    body {\r\n");
      out.write("        padding-top: 70px;\r\n");
      out.write("        /* Required padding for .navbar-fixed-top. Remove if using .navbar-static-top. Change if height of navigation changes. */\r\n");
      out.write("    }\r\n");
      out.write("    #donutchart{position : absolute; top : 150px; left : 380px;}\r\n");
      out.write("    #bs-example-navbar-collapse-11{position : absolute; top : 150px; left : 770px; z-index:1;}\r\n");
      out.write("    #section { position : absolute; top : 150px; left : 1537px;}\r\n");
      out.write("    img\t { position : absolute; top :150px; left :900px;}\r\n");
      out.write("    </style>\r\n");
      out.write("    \r\n");
      out.write("   <script src=\"../js/jquery-3.2.1.js\"></script>\r\n");
      out.write("    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\r\n");
      out.write("    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\r\n");
      out.write("    <!--[if lt IE 9]>\r\n");
      out.write("        <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\r\n");
      out.write("        <script src=\"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js\"></script>\r\n");
      out.write("    <![endif]-->\r\n");
      out.write("\r\n");
      out.write("   ");
 List<PlayerBallDTO> sbd = (List<PlayerBallDTO>)request.getAttribute("list"); 
      out.write("\r\n");
      out.write("    <!-- 그래프 -->\r\n");
      out.write("    <script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("      google.charts.load(\"current\", {packages:[\"corechart\"]});\r\n");
      out.write("      google.charts.setOnLoadCallback(drawChart);\r\n");
      out.write("      function drawChart() {\r\n");
      out.write("        var data = google.visualization.arrayToDataTable([\r\n");
      out.write("          ['Stadium', 'AmountHomeRunBall per Section'],\r\n");
      out.write("          ['");
      out.print(sbd.get(0).getBseatcode());
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(sbd.get(0).getBcount());
      out.write("],\r\n");
      out.write("          ['");
      out.print(sbd.get(1).getBseatcode());
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(sbd.get(1).getBcount());
      out.write("],\r\n");
      out.write("          ");
      out.write("\r\n");
      out.write("        ]);\r\n");
      out.write("\r\n");
      out.write("        var options = {\r\n");
      out.write("          'title' : '좌석별 홈런 갯수'\r\n");
      out.write("        };\r\n");
      out.write("\r\n");
      out.write("        chart = new google.visualization.PieChart(document.getElementById('donutchart'));\r\n");
      out.write("        chart.draw(data, options);\r\n");
      out.write("        \r\n");
      out.write("        google.visualization.events.addListener(chart, 'select', myClickHandler);\r\n");
      out.write("\r\n");
      out.write("      }\r\n");
      out.write("      \r\n");
      out.write("      function myClickHandler(){\r\n");
      out.write("         var selection = chart.getSelection();\r\n");
      out.write("         //var message = '';\r\n");
      out.write("        var seat  = ''; \r\n");
      out.write("        \r\n");
      out.write("         for (var i = 0; i < selection.length; i++) {\r\n");
      out.write("           var item = selection[i];\r\n");
      out.write("           if (item.row != null && item.column != null) {\r\n");
      out.write("             //message += '{row:' + item.row + ',column:' + item.column + '}';\r\n");
      out.write("           } else if (item.row != null) {\r\n");
      out.write("             //message += '{row:' + item.row + '}';\r\n");
      out.write("             //seat = item.row;\r\n");
      out.write("             \r\n");
      out.write("             \r\n");
      out.write("             \r\n");
      out.write("           } else if (item.column != null) {\r\n");
      out.write("             //message += '{column:' + item.column + '}';\r\n");
      out.write("           }\r\n");
      out.write("           \r\n");
      out.write("           \r\n");
      out.write("         }\r\n");
      out.write("         if (seat == '') {\r\n");
      out.write("            seat = '0';\r\n");
      out.write("         } \r\n");
      out.write("         // alert('You selected ' + message);\r\n");
      out.write("         \r\n");
      out.write("         console.log(seat);\r\n");
      out.write("         \r\n");
      out.write("         if(seat == '0')\r\n");
      out.write("            $(\"#seat\").attr(\"src\", \"./seatInfo/b.png\")\r\n");
      out.write("         else if(seat == '1')\r\n");
      out.write("            $(\"#seat\").attr(\"src\", \"./seatInfo/c.png\")\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("        /*     $(\"#seat\").attr(\"src\", \"./seatInfo/\"+ seat +\".png\") */\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("         \r\n");
      out.write("       }\r\n");
      out.write("    </script>\r\n");
      out.write("<style>\r\n");
      out.write("body{\r\n");
      out.write("background : url('./searchimg/back2.jpg');\r\n");
      out.write("background-repeat : no-repeat;\r\n");
      out.write("background-size : cover;\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <!-- Navigation -->\r\n");
      out.write("    <nav class=\"navbar navbar-inverse navbar-fixed-top\" role=\"navigation\">\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <!-- Brand and toggle get grouped for better mobile display -->\r\n");
      out.write("            <div class=\"navbar-header\">\r\n");
      out.write("                <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#bs-example-navbar-collapse-1\">\r\n");
      out.write("                    <span class=\"sr-only\">Toggle navigation</span>\r\n");
      out.write("                    <span class=\"icon-bar\"></span>\r\n");
      out.write("                    <span class=\"icon-bar\"></span>\r\n");
      out.write("                    <span class=\"icon-bar\"></span>\r\n");
      out.write("                </button>\r\n");
      out.write("                <a class=\"navbar-brand\" href=\"링크걸어야함\"> NAJURA </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- Collect the nav links, forms, and other content for toggling -->\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-1\">\r\n");
      out.write("                <ul class=\"nav navbar-nav\">\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"#\"> 구단 정보 </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"#\"> 경기 정보 </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("                        <a href=\"#\"> 홈런 기록 </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- /.navbar-collapse -->\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- /.container -->\r\n");
      out.write("    </nav>\r\n");
      out.write("\r\n");
      out.write("    <!-- Page Content -->\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("            <div class=\"col-lg-12\">\r\n");
      out.write("            <div class=\"collapse navbar-collapse\" id=\"bs-example-navbar-collapse-11\">\r\n");
      out.write("          <ul class=\"nav navbar-nav\">\r\n");
      out.write("          <li>\r\n");
      out.write("         <a href=\"링크연결 해야함\"> 홈런 </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                    <li>\r\n");
      out.write("         <a href=\"링크연결 해야함\"> 파울 </a>\r\n");
      out.write("                    </li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"row\">\r\n");
      out.write("      <div id=\"donutchart\" style=\"width: 550px; height: 615px;\"></div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- /.row -->\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- /.container -->\r\n");
      out.write("<img src = \"A.png\" width = 500px height = 500px>\r\n");
      out.write("\r\n");
      out.write("<select id=\"section\">\r\n");
      out.write("\r\n");
      out.write("    <option value=\"\"> 전체 구장 </option>\r\n");
      out.write("    <option value=\"\"> 잠실 </option>\r\n");
      out.write("    <option value=\"\"> C section </option>\r\n");
      out.write("    <option value=\"\"> D section </option>\r\n");
      out.write("    <option value=\"\"> E section </option>\r\n");
      out.write("    <option value=\"\"> F section </option>\r\n");
      out.write("    <option value=\"\"> G section </option>\r\n");
      out.write("    <option value=\"\"> H section </option>\r\n");
      out.write("    <option value=\"\"> I section </option>\r\n");
      out.write("    <option value=\"\"> J section </option>\r\n");
      out.write("    \r\n");
      out.write("</select>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <!-- jQuery Version 1.11.1 -->\r\n");
      out.write("    <script src=\"js/jquery.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap Core JavaScript -->\r\n");
      out.write("    <script src=\"js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
